<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="com.zenith.coin.dao.CoinDao">
	
    <select id="coinUserList" parameterType="hashmap" resultType="hashmap">
			SELECT 	ID			,USER_ID		,API_KEY		,SCR_KEY		,COIN_MARKET
					,BUY_TIME	,BUY_H_PRICE	,BUY_L_PRICE	,BUY_H_CNT		,BUY_L_CNT
					,SELL_TIME	,SELL_H_PRICE	,SELL_L_PRICE	,SELL_H_CNT		,SELL_L_CNT
					,BOT_STATE	
					,DATE_FORMAT(CREATE_DATE, '%Y-%m-%d %T') AS CREATE_DATE
					,DATE_FORMAT(UPDATE_DATE, '%Y-%m-%d %T') AS UPDATE_DATE
			FROM 	COIN_INFO
    </select>
    
    <select id="coinUserInfo" parameterType="hashmap" resultType="hashmap">
			SELECT 	ID			,USER_ID		,API_KEY		,SCR_KEY		,COIN_MARKET
					,BUY_TIME	,BUY_H_PRICE	,BUY_L_PRICE	,BUY_H_CNT		,BUY_L_CNT
					,SELL_TIME	,SELL_H_PRICE	,SELL_L_PRICE	,SELL_H_CNT		,SELL_L_CNT
					,CREATE_DATE	,UPDATE_DATE
			FROM 	COIN_INFO
			WHERE	ID = #{id}
    </select>

    
    <insert id="coinUserInsert" parameterType="hashmap" >
		INSERT INTO COIN_INFO
				(
					USER_ID			,API_KEY		,SCR_KEY		,COIN_MARKET	
					,BUY_TIME		,BUY_H_PRICE	,BUY_L_PRICE	,BUY_H_CNT		,BUY_L_CNT
					,SELL_TIME		,SELL_H_PRICE	,SELL_L_PRICE	,SELL_H_CNT		,SELL_L_CNT
					,CREATE_DATE
				)
		VALUES
				(
					#{userId}		,#{apiKey}		,#{scrKey}		,#{coinMarket}
					,#{buyTime}		,#{buyHPrice}	,#{buyLPrice}	,#{buyHCnt}		,#{buyLCnt}
					,#{sellTime}	,#{sellHPrice}	,#{sellLPrice}	,#{sellHCnt}	,#{sellLCnt}
					,NOW()
				)
	</insert>
   
	<update id="coinUserUpdate" parameterType="hashmap">
			UPDATE	COIN_INFO 
			SET		USER_ID = #{userId}			,API_KEY = #{apiKey}			,SCR_KEY = #{scrKey}			,COIN_MARKET = #{coinMarket}
					,BUY_TIME = #{buyTime}		,BUY_H_PRICE = #{buyHPrice}		,BUY_L_PRICE = #{buyLPrice}		,BUY_H_CNT = #{buyHCnt}		,BUY_L_CNT = #{buyLCnt}
					,SELL_TIME = #{sellTime}	,SELL_H_PRICE = #{sellHPrice}	,SELL_L_PRICE = #{sellLPrice}	,SELL_H_CNT = #{sellHCnt}	,SELL_L_CNT = #{sellLCnt}
					,UPDATE_DATE = NOW()
			WHERE	ID = #{id}	
	</update>
	
	<update id="coinUserUpdateBot" parameterType="hashmap">
			UPDATE	COIN_INFO 
			SET		BOT_STATE = #{botState}
			WHERE	ID = #{id}	
	</update>
     
	<delete id="coinUserDelete" parameterType="String">
			DELETE	FROM COIN_INFO 
			WHERE	ID = #{id}
	</delete>
	
	<insert id="coinInsert" parameterType="hashmap" >
		INSERT INTO COIN_LOG
				(
					ORDER_NO		,ID				,USER_ID		,API_KYE	
					,SCR_KEY		,ACTION			,COIN_MARKET	,PRICE			,CNT
				)
		VALUES
				(
					#{data}			,#{id}			,#{userId}		,#{apiKey}
					,#{scretKey}	,#{action}		,#{coinMarket}	,#{price}		,#{cnt}
				)
	</insert>
	
	<select id="coinList" parameterType="hashmap" resultType="hashmap">
			SELECT 	ORDER_NO
			FROM 	COIN_LOG
			WHER	CANCEL_YN = 'N'
			AND		USER_ID = #{userId}
			AND		API_KYE = #{apiKey}
    </select>
	
	<update id="coinCancle" parameterType="hashmap">
			UPDATE	COIN_LOG 
			SET		CANCEL_YN = 'Y'			,UPDATE_DATE = NOW()
			WHERE	ORDER_NO = #{orderNo}	
	</update>
	
	<update id="coinCancleAll" parameterType="hashmap">
			UPDATE	COIN_LOG 
			SET		CANCEL_YN = 'A'			,UPDATE_DATE = NOW()
			WHERE	CANCEL_YN != 'A'
			AND		USER_ID = #{USER_ID}
			AND		API_KYE = #{API_KEY}
	</update>
    
</mapper>

