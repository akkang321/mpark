<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.zenith.admin.situation.dao.AdminSituationDao">

	<select id="situationUserList" parameterType="hashmap" resultType="hashmap">
	<include refid="common.stratPage" />
	
	<![CDATA[	
	SELECT		U_ID			,TEACHER_NAME		,CLASS_TOL				,CLASS_OVER_CNT
				,CLASS_ON_CNT	,SCHEDULE_TOL		,SCHEDULE_OVER_CNT		,SCHEDULE_ON_CNT		,USER_NAME
	FROM
		(SELECT B.U_ID, A.TEACHER_NAME, IFNULL(A.CLASS_TOL, 0) AS CLASS_TOL, IFNULL(A.CLASS_OVER_CNT, 0) AS CLASS_OVER_CNT, 
		IFNULL(A.CLASS_ON_CNT, 0) AS CLASS_ON_CNT, 
		B.SCHEDULE_TOL, B.SCHEDULE_OVER_CNT, B.SCHEDULE_ON_CNT, A.USER_NAME
		FROM 
		(SELECT A.USER_NAME, A.U_ID, A.T_ID, A.TEACHER_NAME, IFNULL(A.CLASS_TOL, 0) AS CLASS_TOL, IFNULL(B.CLASS_OVER_CNT, 0) AS CLASS_OVER_CNT, (IFNULL(CLASS_TOL-CLASS_OVER_CNT, 0)) AS CLASS_ON_CNT 
		FROM 
		(SELECT U_ID, COUNT(C_ID) AS CLASS_TOL, T_ID, TEACHER_NAME, USER_NAME
		FROM 
		(SELECT U.U_ID, C.C_ID, T.T_ID, T.TEACHER_NAME, U.USER_NAME,
		CONCAT(DATE_FORMAT(MIN(S.SCHEDULE_DATE),'%Y%m%d'),(DATE_FORMAT(MIN(S.START_TIME),'%H%i'))),
		CONCAT(DATE_FORMAT(MAX(S.SCHEDULE_DATE),'%Y%m%d'),(DATE_FORMAT(MAX(S.END_TIME),'%H%i')))
		FROM CLASS_INFO C
		RIGHT JOIN SCHEDULE_INFO S ON S.C_ID=C.C_ID
		INNER JOIN TEACHER_INFO T ON T.T_ID=C.T_ID
		INNER JOIN RESERVATION_INFO R ON R.S_ID=S.S_ID
		RIGHT JOIN USER_INFO U ON U.U_ID=R.U_ID
		GROUP BY U.U_ID, C.C_ID, T.T_ID) A
		GROUP BY U_ID, T_ID) A
		RIGHT JOIN 
		(SELECT U_ID, T_ID, TEACHER_NAME, COUNT(C_ID) AS CLASS_OVER_CNT
		FROM
		(SELECT U.U_ID, C.C_ID, T.T_ID, T.TEACHER_NAME,
		CONCAT(DATE_FORMAT(MIN(S.SCHEDULE_DATE),'%Y%m%d'),(DATE_FORMAT(MIN(S.START_TIME),'%H%i'))) AS CLASS_START_TIMING,
		CONCAT(DATE_FORMAT(MAX(S.SCHEDULE_DATE),'%Y%m%d'),(DATE_FORMAT(MAX(S.END_TIME),'%H%i'))) AS CLASS_END_TIMING
		FROM CLASS_INFO C
		RIGHT JOIN SCHEDULE_INFO S ON S.C_ID=C.C_ID
		INNER JOIN TEACHER_INFO T ON T.T_ID=C.T_ID
		INNER JOIN RESERVATION_INFO R ON R.S_ID=S.S_ID
		RIGHT JOIN USER_INFO U ON U.U_ID=R.U_ID
		GROUP BY U.U_ID, C.C_ID, T.T_ID) A
		WHERE CLASS_END_TIMING
		<= (DATE_FORMAT(NOW(), '%Y%m%d%H%i'))
		GROUP BY U_ID, C_ID) B ON B.U_ID=A.U_ID AND B.T_ID=A.T_ID) A
		RIGHT JOIN
		(SELECT A.T_ID, A.U_ID, A.TEACHER_NAME, A.SCHEDULE_TOL, IFNULL(B.SCHEDULE_OVER_CNT, 0) AS SCHEDULE_OVER_CNT, (IFNULL(A.SCHEDULE_TOL-B.SCHEDULE_OVER_CNT, 0)) AS SCHEDULE_ON_CNT
		FROM 
		(SELECT C.T_ID, U.U_ID, T.TEACHER_NAME, COUNT(S.S_ID) AS SCHEDULE_TOL
		FROM CLASS_INFO C 
		RIGHT JOIN SCHEDULE_INFO S ON S.C_ID=C.C_ID
		INNER JOIN TEACHER_INFO T ON T.T_ID=C.T_ID
		INNER JOIN RESERVATION_INFO R ON R.S_ID=S.S_ID
		RIGHT JOIN USER_INFO U ON U.U_ID=R.U_ID
		GROUP BY U.U_ID, T.T_ID) A
		LEFT JOIN 
		(SELECT C.T_ID, U.U_ID, T.TEACHER_NAME, COUNT(S.S_ID) AS SCHEDULE_OVER_CNT 
		FROM CLASS_INFO C
		RIGHT JOIN SCHEDULE_INFO S ON S.C_ID=C.C_ID
		INNER JOIN TEACHER_INFO T ON T.T_ID=C.T_ID
		INNER JOIN RESERVATION_INFO R ON R.S_ID=S.S_ID
		RIGHT JOIN USER_INFO U ON U.U_ID=R.U_ID
		WHERE CONCAT(DATE_FORMAT(S.SCHEDULE_DATE,'%Y%m%d'), DATE_FORMAT(S.START_TIME,'%H%i')) <= DATE_FORMAT(NOW(),'%Y%m%d%H%i')
		GROUP BY U.U_ID, T.T_ID) B ON B.T_ID=A.T_ID AND B.U_ID=A.U_ID
		) B ON B.T_ID=A.T_ID AND B.U_ID=A.U_ID
		ORDER BY U_ID ASC
	) BASE_T
	]]>

	<where>
		<if test="sUserId != null and sUserId != ''">
			AND U_ID LIKE CONCAT('%',#{sUserId},'%') 
		</if>
		
		<if test="sUserName != null and sUserName != ''">
			AND USER_NAME LIKE CONCAT('%',#{sUserName},'%')
		</if>
	</where> 
	
	<include refid="common.endPage" />
	</select>


	<select id="situationUserInfo" parameterType="hashmap" resultType="hashmap">
		SELECT 		U.U_ID		,C.C_ID		,U.USER_NAME		,COUNT(S.S_ID) AS SCHEDULE_TOL
					,C.T_ID		,C.CLASS_NAME 
					,MIN(S.SCHEDULE_DATE) AS START_DAY			,MAX(S.SCHEDULE_DATE) AS END_DAY		,MIN(S.START_TIME) AS START_TIME		,MAX(S.END_TIME) AS END_TIME
		FROM 		CLASS_INFO 		C
		RIGHT	JOIN 	SCHEDULE_INFO 		S ON S.C_ID=C.C_ID
		LEFT	JOIN 	RESERVATION_INFO 	R ON R.S_ID=S.S_ID
		RIGHT 	JOIN 	USER_INFO 			U ON U.U_ID=R.U_ID
		
		WHERE 	U.U_ID=#{uId}
		GROUP 	BY U.U_ID, C.C_ID
		ORDER 	BY U.U_ID ASC
	</select>


	<select id="situationUserScheduleInfo" parameterType="hashmap" resultType="hashmap">

			SELECT		U_ID			,C_ID			,S_ID				,START_DATE		,END_DATE		
						,START_TIME		,END_TIME		,TEACHER_NAME		,CLASS_NAME		,USER_NAME
			FROM 
				(
				SELECT		U.U_ID		,C.C_ID		,S.S_ID	,CONCAT(S.SCHEDULE_DATE, ' ' , S.START_TIME) AS START_DATE
							,CONCAT(S.SCHEDULE_DATE, ' ' , S.END_TIME) AS END_DATE
							,DATE_FORMAT(S.START_TIME,'%H:%i') AS START_TIME
							,DATE_FORMAT(S.END_TIME,'%H:%i') AS END_TIME
							,FN_TEACHER_NAME(C.T_ID) AS TEACHER_NAME
							,C.CLASS_NAME		,U.USER_NAME
							
				FROM 	CLASS_INFO 				C 
				RIGHT 	JOIN SCHEDULE_INFO 		S ON S.C_ID=C.C_ID 
				LEFT 	JOIN RESERVATION_INFO 	R ON R.S_ID=S.S_ID 
				RIGHT 	JOIN USER_INFO 			U ON U.U_ID=R.U_ID) A
				
				WHERE 	U_ID=#{uId} 

	</select>
	
	
	<select id="selectUserName" parameterType="hashmap" resultType="hashmap">
		SELECT 	USER_NAME
		FROM 	USER_INFO 
		
		WHERE 	U_ID=#{uId}
	</select>
	
	
	<select id="situationUserCnt" parameterType="hashmap" resultType="int">
		<![CDATA[
    SELECT		COUNT(1) 
	FROM
		(SELECT B.U_ID, A.TEACHER_NAME, IFNULL(A.CLASS_TOL, 0) AS CLASS_TOL, IFNULL(A.CLASS_OVER_CNT, 0) AS CLASS_OVER_CNT, 
		IFNULL(A.CLASS_ON_CNT, 0) AS CLASS_ON_CNT, 
		B.SCHEDULE_TOL, B.SCHEDULE_OVER_CNT, B.SCHEDULE_ON_CNT, A.USER_NAME
		FROM 
		(SELECT A.USER_NAME, A.U_ID, A.T_ID, A.TEACHER_NAME, IFNULL(A.CLASS_TOL, 0) AS CLASS_TOL, IFNULL(B.CLASS_OVER_CNT, 0) AS CLASS_OVER_CNT, (IFNULL(CLASS_TOL-CLASS_OVER_CNT, 0)) AS CLASS_ON_CNT 
		FROM 
		(SELECT U_ID, COUNT(C_ID) AS CLASS_TOL, T_ID, TEACHER_NAME, USER_NAME
		FROM 
		(SELECT U.U_ID, C.C_ID, T.T_ID, T.TEACHER_NAME, U.USER_NAME,
		CONCAT(DATE_FORMAT(MIN(S.SCHEDULE_DATE),'%Y%m%d'),(DATE_FORMAT(MIN(S.START_TIME),'%H%i'))),
		CONCAT(DATE_FORMAT(MAX(S.SCHEDULE_DATE),'%Y%m%d'),(DATE_FORMAT(MAX(S.END_TIME),'%H%i')))
		FROM CLASS_INFO C
		RIGHT JOIN SCHEDULE_INFO S ON S.C_ID=C.C_ID
		INNER JOIN TEACHER_INFO T ON T.T_ID=C.T_ID
		INNER JOIN RESERVATION_INFO R ON R.S_ID=S.S_ID
		RIGHT JOIN USER_INFO U ON U.U_ID=R.U_ID
		GROUP BY U.U_ID, C.C_ID, T.T_ID) A
		GROUP BY U_ID, T_ID) A
		RIGHT JOIN 
		(SELECT U_ID, T_ID, TEACHER_NAME, COUNT(C_ID) AS CLASS_OVER_CNT
		FROM
		(SELECT U.U_ID, C.C_ID, T.T_ID, T.TEACHER_NAME,
		CONCAT(DATE_FORMAT(MIN(S.SCHEDULE_DATE),'%Y%m%d'),(DATE_FORMAT(MIN(S.START_TIME),'%H%i'))) AS CLASS_START_TIMING,
		CONCAT(DATE_FORMAT(MAX(S.SCHEDULE_DATE),'%Y%m%d'),(DATE_FORMAT(MAX(S.END_TIME),'%H%i'))) AS CLASS_END_TIMING
		FROM CLASS_INFO C
		RIGHT JOIN SCHEDULE_INFO S ON S.C_ID=C.C_ID
		INNER JOIN TEACHER_INFO T ON T.T_ID=C.T_ID
		INNER JOIN RESERVATION_INFO R ON R.S_ID=S.S_ID
		RIGHT JOIN USER_INFO U ON U.U_ID=R.U_ID
		GROUP BY U.U_ID, C.C_ID, T.T_ID) A
		WHERE CLASS_END_TIMING
		<= (DATE_FORMAT(NOW(), '%Y%m%d%H%i'))
		GROUP BY U_ID, C_ID) B ON B.U_ID=A.U_ID AND B.T_ID=A.T_ID) A
		RIGHT JOIN
		(SELECT A.T_ID, A.U_ID, A.TEACHER_NAME, A.SCHEDULE_TOL, IFNULL(B.SCHEDULE_OVER_CNT, 0) AS SCHEDULE_OVER_CNT, (IFNULL(A.SCHEDULE_TOL-B.SCHEDULE_OVER_CNT, 0)) AS SCHEDULE_ON_CNT
		FROM 
		(SELECT C.T_ID, U.U_ID, T.TEACHER_NAME, COUNT(S.S_ID) AS SCHEDULE_TOL
		FROM CLASS_INFO C 
		RIGHT JOIN SCHEDULE_INFO S ON S.C_ID=C.C_ID
		INNER JOIN TEACHER_INFO T ON T.T_ID=C.T_ID
		INNER JOIN RESERVATION_INFO R ON R.S_ID=S.S_ID
		RIGHT JOIN USER_INFO U ON U.U_ID=R.U_ID
		GROUP BY U.U_ID, T.T_ID) A
		LEFT JOIN 
		(SELECT C.T_ID, U.U_ID, T.TEACHER_NAME, COUNT(S.S_ID) AS SCHEDULE_OVER_CNT 
		FROM CLASS_INFO C
		RIGHT JOIN SCHEDULE_INFO S ON S.C_ID=C.C_ID
		INNER JOIN TEACHER_INFO T ON T.T_ID=C.T_ID
		INNER JOIN RESERVATION_INFO R ON R.S_ID=S.S_ID
		RIGHT JOIN USER_INFO U ON U.U_ID=R.U_ID
		WHERE CONCAT(DATE_FORMAT(S.SCHEDULE_DATE,'%Y%m%d'), DATE_FORMAT(S.START_TIME,'%H%i')) <= DATE_FORMAT(NOW(),'%Y%m%d%H%i')
		GROUP BY U.U_ID, T.T_ID) B ON B.T_ID=A.T_ID AND B.U_ID=A.U_ID
		) B ON B.T_ID=A.T_ID AND B.U_ID=A.U_ID
		ORDER BY U_ID ASC
	) BASE_T
	]]>
	</select>


</mapper>


