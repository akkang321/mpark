<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 

<mapper namespace="com.zenith.admin.price.dao.AdminPriceClassDao"> 


<select id="priceClassList" parameterType="hashmap" resultType="hashmap"> 

	SELECT FN_CLASS_NAME_CID(C_ID) AS CLASS_NAME, FN_TEACHER_NAME_CID(C_ID) AS TEACHER_NAME, COUNT(USER_CNT) AS USER_CNT, COUNT(PAY_USER_CNT) AS PAY_USER_CNT, SUM(ORG_PAY_PRICE) AS ORG_PAY_PRICE_TOL, SUM(PAY_PRICE) AS PAY_PRICE_TOL, C_ID 
	FROM 
		(
		SELECT CLASS_NAME, TEACHER_NAME, USER_CNT, PAY_USER_CNT, ORG_PAY_PRICE, PAY_PRICE, C_ID, T_ID, P_ID, U_ID
		FROM
			(
			SELECT CLASS_NAME, TEACHER_NAME, USER_CNT, COUNT(U_ID) AS PAY_USER_CNT, ORG_PAY_PRICE, PAY_PRICE, C_ID, T_ID, P_ID, U_ID 
			FROM
				(
				SELECT C.CLASS_NAME, FN_TEACHER_NAME(C.T_ID) AS TEACHER_NAME, C.USER_CNT, PI.U_ID, PI.ORG_PAY_PRICE, PI.PAY_PRICE, C.C_ID, R.T_ID, PI.P_ID, PI.C_P_ID 
				FROM CLASS_INFO C 
					INNER JOIN SCHEDULE_INFO S ON S.C_ID=C.C_ID 
					INNER JOIN RESERVATION_INFO R ON R.S_ID=S.S_ID 
					INNER JOIN CLASS_PRICE CP ON CP.C_P_ID=C.C_P_ID 
					INNER JOIN PAY_INFO PI ON PI.C_P_ID=CP.C_P_ID 
					
					WHERE CP.C_PRICE_TYPE='C060200' 
					GROUP BY C.C_ID, PI.U_ID, PI.P_ID, PI.C_P_ID, R.T_ID) ST 
					GROUP BY C_ID, U_ID, P_ID, C_P_ID, T_ID
				) AT 

UNION 

		( 
		SELECT CLASS_NAME, TEACHER_NAME, USER_CNT, COUNT(U_ID) AS PAY_USER_CNT, SUM(ORG_PAY_PRICE) AS ORG_PAY_PRICE_TOL, USE_TICKET_PRICE_TOL, C_ID, T_ID, P_ID, U_ID 
		FROM 
			(
			SELECT 	C.CLASS_NAME, FN_TEACHER_NAME(C.T_ID) AS TEACHER_NAME, PI.ORG_PAY_PRICE, C.C_ID, R.U_ID, C.USER_CNT, PI.T_ID, TI.USE_TICKET_CNT, TI.TICKET_CNT, PI.PAY_PRICE, PI.P_ID, 
					ROUND((PI.PAY_PRICE/TI.TICKET_CNT*TI.USE_TICKET_CNT),0) AS USE_TICKET_PRICE_TOL 
			FROM CLASS_INFO C 
				INNER JOIN SCHEDULE_INFO S ON S.C_ID=C.C_ID 
				INNER JOIN RESERVATION_INFO R ON R.S_ID=S.S_ID 
				INNER JOIN TICKET_INFO TI ON TI.T_ID=R.T_ID 
				INNER JOIN PAY_INFO PI ON PI.T_ID=R.T_ID 

			WHERE C.CLASS_TYPE='C060100' 
			GROUP BY C.C_ID, R.U_ID, PI.P_ID) BT 
			GROUP BY C_ID, U_ID, P_ID 
		) 
	) newTable 
	<where> 
		<if test="sClassName != null and sClassName != ''"> 
			AND CLASS_NAME LIKE CONCAT('%', #{sClassName}, '%') 
		</if> 
	</where> 
	GROUP BY C_ID 

</select> 


</mapper>



