<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.zenith.user.academy.dao.ScheduleDao">
	<select id="scheduleList" parameterType="hashmap" resultType="hashmap">
		SELECT 	S.S_ID	,S.SCHEDULE_DATE
				,CONVERT(DATE_FORMAT(S.SCHEDULE_DATE,'%d'),signed) AS DAY
				,DATE_FORMAT(S.START_TIME,'%H:%i') AS START_TIME
				,DATE_FORMAT(DATE_ADD(S.START_TIME,INTERVAL-15 MINUTE),'%H%i') AS START_TIME_COMP
				,DATE_FORMAT(S.END_TIME,'%H:%i') AS END_TIME
				,FN_TEACHER_NAME(C.T_ID) AS FN_TEACHER_NAME
				,C.CLASS_NAME	,C.CLASS_LEVEL
				,FN_CODE_NAME(C.CLASS_LEVEL) AS FN_CLASS_LEVEL
				,(C.USER_CNT - (SELECT COUNT(1) FROM RESERVATION_INFO R WHERE R.S_ID = S.S_ID AND R.RESERVATION_TYPE = 'C080100')) AS CNT
				,CASE
					WHEN C.CLASS_TYPE = 'C060100'
					THEN IF(C.USER_CNT - (SELECT COUNT(1) FROM RESERVATION_INFO R WHERE R.S_ID = S.S_ID AND R.RESERVATION_TYPE = 'C080100') = 0,'Sold out','Available' )
					ELSE 
						(SELECT IF(COUNT(1)>0,'Sold out','Available') FROM SCHEDULE_INFO S1 INNER JOIN CLASS_INFO C1
						ON	S1.C_ID = C1.C_ID
						WHERE   C1.CLASS_TYPE = 'C060200'
						<![CDATA[
						AND ( CONCAT( DATE_FORMAT(S1.SCHEDULE_DATE,'%Y%m%d') ,DATE_FORMAT(DATE_ADD(S1.START_TIME,INTERVAL-15 MINUTE),'%H%i')) < DATE_FORMAT(NOW(),'%Y%m%d%H%i')
						      OR
							  C1.USER_CNT - (SELECT COUNT(1) FROM RESERVATION_INFO R WHERE R.S_ID = S1.S_ID AND R.RESERVATION_TYPE = 'C080100') = 0
							  )  
						]]> 
						AND	C1.C_ID = C.C_ID
						ORDER BY SCHEDULE_DATE 
						)
				END AS SCHEDULE_STATE
				,C.CLASS_TYPE
		FROM 	SCHEDULE_INFO S INNER JOIN CLASS_INFO C
		WHERE	S.C_ID = C.C_ID
		AND		C.CLASS_STATE = 'C070100'
		AND		DATE_FORMAT(S.SCHEDULE_DATE,'%Y%m') = CONCAT(#{sYear},#{sMonth})
		<if test="sClassLevel != null and sClassLevel != ''">
			AND	C.CLASS_LEVEL = #{sClassLevel} 
		</if>
		<if test="sTId != null and sTId != ''">
			AND	C.T_ID = #{sTId}
		</if>
		<if test="sMClassLevel != null and sMClassLevel != ''">
			AND	C.CLASS_LEVEL = #{sMClassLevel} 
		</if>
		<if test="sMTId != null and sMTId != ''">
			AND	C.T_ID = #{sMTId}
		</if>
		ORDER BY S.SCHEDULE_DATE	,S.START_TIME 
	</select>
	
	<select id="scheduleListUId" parameterType="hashmap" resultType="hashmap">
		SELECT 	S.S_ID	,S.SCHEDULE_DATE	,R.U_ID 
				,CONVERT(DATE_FORMAT(S.SCHEDULE_DATE,'%d'),signed) AS DAY
				,DATE_FORMAT(S.START_TIME,'%H:%i') AS START_TIME
				,DATE_FORMAT(DATE_ADD(S.START_TIME,INTERVAL-15 MINUTE),'%H%i') AS START_TIME_COMP
				,DATE_FORMAT(S.END_TIME,'%H:%i') AS END_TIME
				,FN_TEACHER_NAME(C.T_ID) AS FN_TEACHER_NAME
				,C.CLASS_NAME	,C.CLASS_LEVEL
				,FN_CODE_NAME(C.CLASS_LEVEL) AS FN_CLASS_LEVEL
				,(C.USER_CNT - (SELECT COUNT(1) FROM RESERVATION_INFO R WHERE R.S_ID = S.S_ID AND R.RESERVATION_TYPE = 'C080100')) AS CNT
				,CASE
					WHEN C.CLASS_TYPE = 'C060100'
					THEN IF(C.USER_CNT - (SELECT COUNT(1) FROM RESERVATION_INFO R WHERE R.S_ID = S.S_ID AND R.RESERVATION_TYPE = 'C080100') = 0,'Sold out','Available' )
					ELSE 
						(SELECT IF(COUNT(1)>0,'Sold out','Available') FROM SCHEDULE_INFO S1 INNER JOIN CLASS_INFO C1
						ON	S1.C_ID = C1.C_ID
						WHERE   C1.CLASS_TYPE = 'C060200'
						<![CDATA[
						AND ( CONCAT( DATE_FORMAT(S1.SCHEDULE_DATE,'%Y%m%d') ,DATE_FORMAT(DATE_ADD(S1.START_TIME,INTERVAL-15 MINUTE),'%H%i')) < DATE_FORMAT(NOW(),'%Y%m%d%H%i')
						      OR
							  C1.USER_CNT - (SELECT COUNT(1) FROM RESERVATION_INFO R WHERE R.S_ID = S1.S_ID AND R.RESERVATION_TYPE = 'C080100') = 0
							  )  
						]]> 
						AND	C1.C_ID = C.C_ID
						ORDER BY SCHEDULE_DATE 
						)
				END AS SCHEDULE_STATE
				,C.CLASS_TYPE
		FROM 	SCHEDULE_INFO S INNER JOIN CLASS_INFO C
		ON		S.C_ID = C.C_ID
		AND		DATE_FORMAT(S.SCHEDULE_DATE,'%Y%m') = CONCAT(#{sYear},#{sMonth})
		AND		C.CLASS_STATE = 'C070100'
		<if test="sClassLevel != null and sClassLevel != ''">
			AND	C.CLASS_LEVEL = #{sClassLevel}
		</if>
		<if test="sTId != null and sTId != ''">
			AND	C.T_ID = #{sTId}
		</if>
		<if test="sMClassLevel != null and sMClassLevel != ''">
			AND	C.CLASS_LEVEL = #{sMClassLevel} 
		</if>
		<if test="sMTId != null and sMTId != ''">
			AND	C.T_ID = #{sMTId}
		</if>
		LEFT JOIN RESERVATION_INFO R
		ON		R.S_ID = S.S_ID
		AND		R.U_ID = #{uId}
		AND		R.RESERVATION_TYPE != 'C080200'
		ORDER BY S.SCHEDULE_DATE	,S.START_TIME 
	</select>
	
	<select id="scheduleInfo" parameterType="String" resultType="hashmap">
		SELECT 	S.S_ID	,DATE_FORMAT(S.SCHEDULE_DATE,'%Y년%m월%d일') AS SCHEDULE_DATE
				,CONVERT(DATE_FORMAT(S.SCHEDULE_DATE,'%d'),signed) AS DAY
				,DATE_FORMAT(S.START_TIME,'%H:%i') AS START_TIME
				,DATE_FORMAT(S.END_TIME,'%H:%i') AS END_TIME
				,FN_TEACHER_NAME(C.T_ID) AS FN_TEACHER_NAME
				,C.CLASS_NAME	
				,FN_CODE_NAME(C.CLASS_LEVEL) AS CLASS_LEVEL
				,FN_CODE_NAME(C.CLASS_ROOM) AS CLASS_ROOM
				,C.CLASS_TYPE
		FROM 	SCHEDULE_INFO S INNER JOIN CLASS_INFO C
		WHERE	S.C_ID = C.C_ID
		AND		S.S_ID = #{sId}
	</select>
	
	<select id="specialScheduleInfo" parameterType="String" resultType="hashmap">
		SELECT	C.C_ID, C.CLASS_NAME	,C.C_P_ID
	  			,DATE_FORMAT(MIN(SCHEDULE_DATE),'%Y년%m월%d일') AS START_DATE 
	   			,DATE_FORMAT(MAX(SCHEDULE_DATE),'%Y년%m월%d일') AS END_DATE
				,FN_TEACHER_NAME(C.T_ID) AS FN_TEACHER_NAME
				,FN_CODE_NAME(C.CLASS_LEVEL) AS CLASS_LEVEL
				,FN_CODE_NAME(C.CLASS_ROOM) AS CLASS_ROOM
				,C.CLASS_TYPE
		FROM	SCHEDULE_INFO S INNER JOIN CLASS_INFO C ON S.C_ID = C.C_ID
		WHERE	C.C_ID = (SELECT C_ID FROM SCHEDULE_INFO WHERE S_ID = #{sId})
		GROUP BY C.C_ID
	</select>
	
	<select id="checkSchedule" parameterType="hashmap" resultType="Integer">
		SELECT 	COUNT(1)
		FROM	RESERVATION_INFO
		WHERE	U_ID = #{uId}
		AND		S_ID = #{sId}
		AND		RESERVATION_TYPE != 'C080200'		
	</select>
	
	<select id="checkScheduleTime" parameterType="hashmap" resultType="Integer">
		SELECT 	CONCAT(DATE_FORMAT(SCHEDULE_DATE,'%Y%m%d'),DATE_FORMAT(START_TIME,'%H%i')) > DATE_FORMAT(NOW(),'%Y%m%d%H%i')
		FROM	SCHEDULE_INFO
		WHERE	S_ID = #{sId}
	</select>

	<insert id="scheduleTicketInsert" parameterType="hashmap">
		INSERT	INTO	RESERVATION_INFO
				(
					U_ID			,S_ID		,T_ID	,CREATE_DATE	
					,CLASS_TYPE		
				)
		VALUES	
				(
					#{uId}			,#{sId}		,#{tId}	,NOW()
					,(SELECT C.CLASS_TYPE FROM	SCHEDULE_INFO S,  CLASS_INFO C WHERE 	S.C_ID = C.C_ID AND S.S_ID = #{sId} )
				)
		<selectKey resultType="String" keyProperty="tId" order="BEFORE">
			SELECT	T_ID FROM TICKET_INFO 
			WHERE	U_ID = #{uId} AND USE_STATE = 'C130100' 
			AND		DATE_FORMAT(EXPIRATION_DATE, '%Y%m%d') >= DATE_FORMAT(NOW(), '%Y%m%d') 
			AND		EXPIRATION_DATE >= (SELECT SCHEDULE_DATE FROM SCHEDULE_INFO WHERE S_ID = #{sId})
			ORDER BY EXPIRATION_DATE LIMIT 1
		</selectKey>		
	</insert>
	
	<insert id="scheduleSpecialTicketInsert" parameterType="hashmap">
		INSERT	INTO	RESERVATION_INFO
				(
					U_ID			,S_ID		,T_ID	,CREATE_DATE	
					,CLASS_TYPE		
				)
		SELECT  	#{uId}			,S_ID		,#{tId}	,NOW()
					,(SELECT C.CLASS_TYPE FROM	SCHEDULE_INFO S,  CLASS_INFO C WHERE 	S.C_ID = C.C_ID AND S.S_ID = #{sId} )
		FROM		SCHEDULE_INFO
		WHERE		C_ID = #{cId}
	</insert>
	
	<select id="ticketCnt" parameterType="hashmap" resultType="Integer">
		SELECT	IFNULL(SUM(NOW_TICKET_CNT),0) AS NOW_TICKET_CNT 
		FROM 	TICKET_INFO
		WHERE	USE_STATE = 'C130100'
		AND 	DATE_FORMAT(EXPIRATION_DATE, '%Y%m%d') >= DATE_FORMAT( DATE_ADD( NOW(),INTERVAL+15 MINUTE), '%Y%m%d')
		AND		U_ID = #{uId}
	</select>
	
	<select id="ticketSpecialCnt" parameterType="hashmap" resultType="Integer">
		SELECT	IFNULL(SUM(NOW_TICKET_CNT),0) AS NOW_TICKET_CNT 
		FROM 	TICKET_INFO T INNER JOIN CLASS_INFO C ON T.C_P_ID = C.C_P_ID
		WHERE	USE_STATE = 'C130100'
		AND 	DATE_FORMAT(EXPIRATION_DATE, '%Y%m%d') >= DATE_FORMAT( DATE_ADD( NOW(),INTERVAL+15 MINUTE), '%Y%m%d')
		AND		U_ID = #{uId}
		AND		C.C_P_ID = #{cPId}
	</select>
	
	<select id="scheduleCnt" parameterType="hashmap" resultType="Integer">
		SELECT 	(C.USER_CNT - (SELECT COUNT(1) FROM RESERVATION_INFO R WHERE R.S_ID = S.S_ID)) AS CNT
		FROM 	SCHEDULE_INFO S INNER JOIN CLASS_INFO C
		WHERE	S.C_ID = C.C_ID
		AND		S.S_ID = #{sId}
	</select>
	
	<update id="updateUserTicketCnt" parameterType="hashmap">
		UPDATE	TICKET_INFO
		SET 	NOW_TICKET_CNT = (NOW_TICKET_CNT-1)
				,USE_TICKET_CNT = (USE_TICKET_CNT+1)
				,USE_STATE = IF( NOW_TICKET_CNT =0 ,'C130200','C130100')
		WHERE 	T_ID = #{tId}
	</update>
	
</mapper>

